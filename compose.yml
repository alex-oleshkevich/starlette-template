volumes:
    postgres_data:
    redis_data:

x-environment: &env
    DEBUG: 1
    SECRET_KEY: y/PIlnr+JJthKfM0+77vMn9MS8s5ZQ2RyAiXs3l2oCU=
    ENCRYPTION_KEY: F0KBul8yt230U3ddjhfgwBm/EAzavfe/vGLtxNOAjDg=
    REDIS_URL: redis://redis:6379/0
    DATABASE_URL: postgresql+psycopg_async://postgres:postgres@postgres:5432/postgres

    # Test environment
    APP_ENV: ${APP_ENV:-production}
    TEST_DATABASE_URL: ${TEST_DATABASE_URL:-postgresql+psycopg_async://postgres:postgres@postgres:5432/postgres}
    TEST_REDIS_URL: redis://redis:6379/1

services:
    app: &app
        build:
            context: .
            args:
                - RELEASE_ID=${RELEASE_ID:-}
                - RELEASE_BRANCH=${RELEASE_BRANCH:-}
                - RELEASE_COMMIT=${RELEASE_COMMIT:-}
                - RELEASE_DATE=${RELEASE_DATE:-}
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        volumes:
            - ./scripts:/code/scripts:ro
            - ./tests:/code/tests:ro
            - ./build:/code/build:rw
        ports:
            - ${APP_PORT:-8000}:8000
        environment:
            <<: *env

    worker:
        <<: *app
        command: /bin/queue-worker.sh
        ports: []

    postgres:
        image: postgres:17-alpine
        environment:
            <<: *env
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: ${POSTGRES_DB:-postgres}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD", "pg_isready" ]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7-alpine
        volumes:
            - redis_data:/data
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 10s
            timeout: 5s
            retries: 5
