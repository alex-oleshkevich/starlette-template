version: "3"

vars:
    PROJECT: nomadneighbor-api
    GITHUB_USERNAME: starfront-ventures
    REPO_URL: "https://github.com/{{ .GITHUB_USERNAME }}/{{ .PROJECT }}"
    DOCKER_IMAGE: "ghcr.io/{{ .GITHUB_USERNAME }}/{{ .PROJECT }}"

    GIT_BRANCH:
        sh: "git rev-parse --symbolic-full-name --abbrev-ref HEAD"
    GIT_REVISION:
        sh: "git rev-parse HEAD"
    RELEASE_ID: "{{ .GIT_REVISION }}"
    DATE: '{{ now | date "2006-01-02 15:04:05" }}'

includes:
    docker:
        taskfile: ./deploy/docker/
        vars:
            GIT_BRANCH: "{{ .GIT_BRANCH }}"
            GIT_REVISION: "{{ .GIT_REVISION }}"
    tf:
        taskfile: ./deploy/terraform/

    ansible:
        taskfile: ./deploy/ansible/
        vars:
            APP_DOCKER_IMAGE: "{{ .DOCKER_IMAGE }}:{{ .RELEASE_ID }}"

tasks:
    deploy:
        desc: "Release an application."
        cmds:
            - task: "ansible:deploy"

    release:
        desc: "Build and push images"
        cmds:
            - task: docker:release
            - task: ansible:deploy

    rollout:
        desc: "Rollout the application to production."
        silent: true
        cmds:
            - >
                if git diff-index --quiet HEAD --; then

                else
                    echo git has unstaged changes
                    exit 1
                fi
            #            - task: test
            - task: release
            - task: deploy

    messages:init:
        desc: "Extract translation messages from sources"
        vars:
            DOMAIN: '{{ default "messages" .DOMAIN }}'
            LOCALE: "{{ .LOCALE }}"
        cmds:
            - pybabel init -D {{ .DOMAIN }} -l {{ .LOCALE }} -d {{ .PROJECT }}/locales/ -i {{ .PROJECT }}/locales/{{ .DOMAIN }}.pot

    messages:extract:
        desc: "Extract translation messages from sources"
        cmds:
            - pybabel extract -F pybabel.ini -o {{ .PROJECT }}/locales/messages.pot {{ .PROJECT }}

    messages:compile:
        desc: "Compile translation messages from sources"
        cmds:
            - pybabel compile -d {{ .PROJECT }}/locales/

    messages:update:
        desc: "Update message catalogs from template"
        vars:
            DOMAIN: '{{ default "messages" .DOMAIN }}'
            LOCALE: "{{ .LOCALE }}"
        cmds:
            - pybabel update -D {{ .DOMAIN }} -d {{ .PROJECT }}/locales/ -i {{ .PROJECT }}/locales/{{ .DOMAIN }}.pot

    messages:sync:
        desc: "Extract and update messages"
        cmds:
            - { task: "messages:extract" }
            - { task: "messages:update" }
